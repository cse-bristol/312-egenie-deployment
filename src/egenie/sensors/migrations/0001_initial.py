# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-11-02 21:19
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('deployments', '0001_initial'),
        ('sd_store', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChannelExtraDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('friendly_name', models.CharField(max_length=64)),
                ('channel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='extra_details', to='sd_store.Channel')),
            ],
            options={
                'verbose_name_plural': 'Channel extra details',
            },
        ),
        migrations.CreateModel(
            name='SensorDeploymentDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='sensor_images')),
                ('active', models.BooleanField(default=True)),
                ('deployment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_details', to='deployments.Deployment')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deployment_details', to='sd_store.Sensor')),
                ('sensor_readings', models.ManyToManyField(blank=True, related_name='deployments', to='sd_store.SensorReading')),
            ],
            options={
                'verbose_name_plural': 'Sensor deployment details',
            },
        ),
        migrations.CreateModel(
            name='SensorDeploymentDetailsConnectionStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('online_since', models.DateTimeField(blank=True, null=True)),
                ('sensor_deployment_details', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_status_object', to='sensors.SensorDeploymentDetails')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SensorExtraDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('battery_percentage', models.IntegerField(blank=True, null=True)),
                ('sensor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='extra_details', to='sd_store.Sensor')),
            ],
            options={
                'verbose_name_plural': 'Sensor extra details',
            },
        ),
        migrations.AlterUniqueTogether(
            name='sensordeploymentdetails',
            unique_together=set([('deployment', 'sensor')]),
        ),
    ]
